[Unit]
Description=Redis LRU server
Documentation=http://redis.io
Requires=docker.service
After=docker.service
Wants=redis-lru.volumes@%i.service
After=redis-lru.volumes@%i.service

[Service]
Type=simple
Restart=on-failure
RestartSec=10
EnvironmentFile=/etc/environment
EnvironmentFile=/etc/stack_environment
Environment="RELEASE=2.8.19"

TimeoutStartSec=5m
ExecStartPre=-/usr/bin/docker kill redis-lru-%i
ExecStartPre=-/usr/bin/docker rm redis-lru-%i
ExecStartPre=/usr/bin/docker pull nordstrom/redis:${RELEASE}

ExecStart=/usr/bin/docker run \
  --name redis-lru-%i \
  --hostname redis-lru-%i.${STACK_DNS_SUFFIX} \
  --volumes-from redis-lru.volumes-%i \
  --env SERVICE_ID=redis-lru-%i \
  --env SERVICE_6379_NAME=redis-lru \
  --publish 6379:6379 \
    nordstrom/redis:${RELEASE}

ExecStartPost=/bin/bash -c \
  "until docker exec redis-lru-%i redis-cli ping >/dev/null 2>&1; do sleep 1; done"
ExecStartPost=/usr/bin/printf "CONFIG SET maxmemory 500000000"
ExecStartPost=/usr/bin/docker exec redis-lru-%i redis-cli CONFIG SET maxmemory 500000000
ExecStartPost=/usr/bin/printf "CONFIG SET maxmemory-policy allkeys-lru"
ExecStartPost=/usr/bin/docker exec redis-lru-%i redis-cli CONFIG SET maxmemory-policy allkeys-lru

ExecStop=/usr/bin/docker exec redis-lru-%i redis-cli shutdown

[X-Fleet]
MachineMetadata="role=control"
MachineOf=redis-lru.volumes@%i.service
Conflicts=redis-lru@*.service
Conflicts=redis@*.service

[Install]
WantedBy=multi-user.target
